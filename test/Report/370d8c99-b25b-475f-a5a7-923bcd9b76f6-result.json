{"name": "test_perform_authorization_on_github", "status": "failed", "statusDetails": {"message": "AssertionError: Authorization failed: User is not found\nassert 'login' in {'documentation_url': 'https://docs.github.com/rest', 'message': 'Bad credentials'}\n +  where {'documentation_url': 'https://docs.github.com/rest', 'message': 'Bad credentials'} = <bound method Apiresponses.get_json of <api.api_responses.Apiresponses object at 0x000001976212E5C0>>()\n +    where <bound method Apiresponses.get_json of <api.api_responses.Apiresponses object at 0x000001976212E5C0>> = <api.api_responses.Apiresponses object at 0x000001976212E5C0>.get_json", "trace": "@pytest.mark.tryfirst\n    def test_perform_authorization_on_github():\n        response = api.send_get(read_user_endpoint(), auth=auth)\n        authorization_response = Apiresponses(response)\n        print(authorization_response.get_status_code())\n        print(authorization_response.get_content())\n    \n>       assert \"login\" in authorization_response.get_json(), \"Authorization failed: User is not found\"\nE       AssertionError: Authorization failed: User is not found\nE       assert 'login' in {'documentation_url': 'https://docs.github.com/rest', 'message': 'Bad credentials'}\nE        +  where {'documentation_url': 'https://docs.github.com/rest', 'message': 'Bad credentials'} = <bound method Apiresponses.get_json of <api.api_responses.Apiresponses object at 0x000001976212E5C0>>()\nE        +    where <bound method Apiresponses.get_json of <api.api_responses.Apiresponses object at 0x000001976212E5C0>> = <api.api_responses.Apiresponses object at 0x000001976212E5C0>.get_json\n\ntest_all_together.py:32: AssertionError"}, "attachments": [{"name": "stdout", "source": "1a622e7e-0019-40e2-826e-aa84e243e3ce-attachment.txt", "type": "text/plain"}], "start": 1679227478189, "stop": 1679227478438, "uuid": "020544f0-dec5-45d2-aff3-3673b2ac7319", "historyId": "80e88ba2adeb14f21da3e50f09777f8f", "testCaseId": "71fc255bb31d5ae9523c891479c68856", "fullName": "test_all_together#test_perform_authorization_on_github", "labels": [{"name": "tag", "value": "@pytest.mark.tryfirst"}, {"name": "suite", "value": "test_all_together"}, {"name": "host", "value": "AlphaTest"}, {"name": "thread", "value": "13220-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_all_together"}]}